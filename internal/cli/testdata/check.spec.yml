schema: |-
  CREATE PROPERTY GRAPH someGraphType {
    (:Person { age :: INTEGER CHECK(age >= 18 AND age <= 120) }),
    (:Person)-[:FRIEND_OF { foo :: STRING CHECK (size(foo) < 10) }]->(:Person)
  }

cases:
  # Node properties
  - name: Create INTEGER at lower bound
    query: "CREATE (:Person { age: 18 })"
  - name: Create INTEGER below lower bound
    query: "CREATE (:Person { age: 17 })"
    want_err: true
  - name: Create INTEGER at upper bound
    query: "CREATE (:Person { age: 120 })"
  - name: Create INTEGER above upper bound
    query: "CREATE (:Person { age: 121 })"
    want_err: true
  - name: Update INTEGER at lower bound
    query: |
      CREATE (:Person { id: 1, age: 60 });
      MATCH (p:Person { id: 1 }) SET p.age = 18
  - name: Update INTEGER below lower bound
    query: |
      CREATE (:Person { id: 2, age: 60 });
      MATCH (p:Person { id: 2 }) SET p.age = 17
    want_err: true
  - name: Update INTEGER at upper bound
    query: |
      CREATE (:Person { id: 3, age: 60 });
      MATCH (p:Person { id: 3 }) SET p.age = 120
  - name: Update INTEGER above upper bound
    query: |
      CREATE (:Person { id: 4, age: 60 });
      MATCH (p:Person { id: 4 }) SET p.age = 121
    want_err: true

  # Relationship properties
  - name: Create STRING at max length
    query: "CREATE (:Person)-[:FRIEND_OF { foo: 'abcdefghi' }]->(:Person)"
  - name: Create STRING above max length
    query: "CREATE (:Person)-[:FRIEND_OF { foo: 'abcdefghij' }]->(:Person)"
    want_err: true
  - name: Update STRING at max length
    query: |-
      CREATE (:Person)-[:FRIEND_OF { foo: '' }]->(:Person);
      MATCH ()-[r:FRIEND_OF]->() SET r.foo = 'abcdefghi';
  - name: Update STRING above max length
    query: |
      CREATE (:Person)-[:FRIEND_OF { foo: '' }]->(:Person);
      MATCH ()-[r:FRIEND_OF]->() SET r.foo = 'abcdefghij';
    want_err: true
